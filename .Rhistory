labs(title = "Yearly Trends by Region", x = "Year", y = "Value") +
theme_minimal()
ggplot(region_summary, aes(x = year, y = percent_food_insecure_mean)) +
geom_line() +
labs(title = "Yearly Average Food Insecurity Across New York State", x = "Year", y = "Value") +
theme_minimal()
library(ggplot2)
# Replace 'Variable' with the column you want to analyze
ggplot(yearly_summary, aes(x = year, y = percent_food_insecure, color = county.x)) +
geom_line() +
labs(title = "Yearly Food Insecurity Across New York State Counties", x = "Year", y = "Food Insecurity") +
theme_minimal()
library(ggplot2)
# Replace 'Variable' with the column you want to analyze
ggplot(region_summary, aes(x = year, y = percent_food_insecure, color = county.x)) +
geom_line() +
labs(title = "Yearly Food Insecurity Across New York State Counties", x = "Year", y = "Food Insecurity") +
theme_minimal()
library(ggplot2)
# Replace 'Variable' with the column you want to analyze
ggplot(region_summary, aes(x = year, y = percent_food_insecure_mean, color = county.x)) +
geom_line() +
labs(title = "Yearly Food Insecurity Across New York State Counties", x = "Year", y = "Food Insecurity") +
theme_minimal()
# Replace 'Variable' with the column you want to analyze
ggplot(final, aes(x = county.x, y = percent_food_insecure)) +
geom_boxplot(fill = "steelblue") +
labs(title = "Regional Comparison of Variable", x = "Region", y = "Value") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Replace 'Variable' with the column you want to analyze
ggplot(final, aes(x = county.x, y = percent_food_insecure)) +
geom_boxplot(fill = "steelblue") +
labs(title = "Regional Comparison of Variable", x = "Region", y = "Value") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
final <- final %>%
mutate(
rural_urban = case_when(
rural_population_percentage == 100 ~ "Completely Rural",
rural_population_percentage >= 50 & rural_population_percentage < 100 ~ "Mostly Rural",
rural_population_percentage < 50 ~ "Mostly Urban",
TRUE ~ NA_character_ # Handle any unexpected cases
)
)
final <- final %>%
mutate(
rural_urban = case_when(
percent_rural == 100 ~ "Completely Rural",
percent_rural >= 50 & percent_rural < 100 ~ "Mostly Rural",
percent_rural < 50 ~ "Mostly Urban",
TRUE ~ NA_character_ # Handle any unexpected cases
)
)
# Replace 'Variable' with the column you want to analyze
ggplot(final, aes(x = county.x, y = percent_food_insecure, color = rural_urban)) +
geom_boxplot(fill = "steelblue") +
labs(title = "Regional Comparison of Variable", x = "Region", y = "Value") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(final, aes(x = county.x, y = percent_food_insecure, color = rural_urban)) +
geom_boxplot(fill = "steelblue") +
labs(title = "County Level Comparison of Food Insecurity In New York State", x = "County", y = "Food Insecurity Percentage") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(final, aes(x = county.x, y = percent_food_insecure, color = rural_urban)) +
geom_boxplot(fill = "steelblue") +
labs(title = "County Level Comparison of Food Insecurity In New York State", x = "County", y = "Food Insecurity Percentage") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8))
ggplot(final, aes(x = county.x, y = percent_food_insecure, color = rural_urban)) +
geom_boxplot(fill = "steelblue") +
labs(title = "County Level Comparison of Food Insecurity In New York State", x = "County", y = "Food Insecurity Percentage") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 5))
ggplot(final, aes(x = county.x, y = percent_food_insecure, color = rural_urban)) +
geom_boxplot(fill = "steelblue") +
labs(title = "County Level Comparison of Food Insecurity In New York State", x = "County", y = "Food Insecurity Percentage") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(janitor)
library(psych)
# Specify the sheets and columns you want
columns_to_extract <- c("year","fips", "state", "county", "percent_food_insecure","percent_frequent_mental_distress",
"percent_uninsured_children", "percent_disconnected_youth", "spending_per_pupil","school_funding_adequacy", "high_school_graduation_rate", "median_household_income", "gender_pay_gap", "percent_enrolled_in_free_or_reduced_lunch", "percent_household_income_required_for_child_care_expenses", "percent_households_with_severe_cost_burden", "percent_rural", "percent_65_and_over", "percent_black","percent_not_proficient_in_english", "segregation_index", "percent_disconnected_youth", "food_environment_index", "teen_birth_rate", "percent_fair_or_poor_health", "percent_unemployed", "percent_children_in_single_parent_households", "percent_children_in_poverty", "percent_severe_housing_problems", "percent_completed_high_school","percent_completed_high_school", "percent_low_birthweight")
main_25 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_25.csv"
supp_25 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_25.csv"
main_24 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_24.csv"
supp_24 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_24.csv"
main_23 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_23.csv"
supp_23 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_23.csv"
main_22 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_22.csv"
supp_22 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_22.csv"
main_21 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_21.csv"
supp_21 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_21.csv"
main_20 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_20.csv"
supp_20 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_20.csv"
clean_and_select <- function(file_path, columns_to_extract) {
data <- read.csv(file_path, check.names = FALSE) %>%
janitor::clean_names() %>%
select(any_of(columns_to_extract))
return(data)
}
m_25 <- clean_and_select(main_25, columns_to_extract)
s_25 <- clean_and_select(supp_25, columns_to_extract)
m_24 <- clean_and_select(main_24, columns_to_extract)
s_24 <- clean_and_select(supp_24, columns_to_extract)
m_23 <- clean_and_select(main_23, columns_to_extract)
s_23 <- clean_and_select(supp_23, columns_to_extract)
m_22 <- clean_and_select(main_22, columns_to_extract)
s_22 <- clean_and_select(supp_22, columns_to_extract)
m_21 <- clean_and_select(main_21, columns_to_extract)
s_21 <- clean_and_select(supp_21, columns_to_extract)
m_20 <- clean_and_select(main_20, columns_to_extract)
s_20 <- clean_and_select(supp_20, columns_to_extract)
f_25 <- m_25 %>%
left_join(s_25, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_24 <- m_24 %>%
left_join(s_24, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_23 <- m_23 %>%
left_join(s_23, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_22 <- m_22 %>%
left_join(s_22, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_21 <- m_21 %>%
left_join(s_21, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_20 <- m_20 %>%
left_join(s_20, by = c("year", "fips")) %>%
select(-state.y, -county.y)
final <- bind_rows(f_25, f_24, f_23, f_22, f_21, f_20)
final_data_clean <- final %>%
select(where(~ !any(is.na(.))))
final <- final %>%
mutate(
rural_urban = case_when(
percent_rural == 100 ~ "Completely Rural",
percent_rural >= 50 & percent_rural < 100 ~ "Mostly Rural",
percent_rural < 50 ~ "Mostly Urban",
TRUE ~ NA_character_
)
)
total_rows <- nrow(final)
missing_counts <- colSums(is.na(final))
missing_percentage <- (missing_counts / total_rows) * 100
missing_table <- data.frame(
Column = names(missing_counts),
MissingCount = missing_counts,
MissingPercentage = round(missing_percentage, 2)
)
missing_table <- missing_table[missing_table$MissingCount > 0, ]
print(missing_table)
describe(final, fast = T)
ggplot(missing_table, aes(x = reorder(Column, -MissingPercentage), y = MissingPercentage)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(
title = "Percentage of Missing Data by Column",
x = "Variable",
y = "Missingness"
) +
theme_minimal()
library(ggplot2)
numeric_columns <- sapply(final, is.numeric)
final_numeric <- final[, numeric_columns]
for (col in names(final_numeric)) {
print(
ggplot(final, aes_string(x = col)) +
geom_histogram(fill = "steelblue", bins = 30, color = "black") +
labs(title = paste("Distribution of", col), x = col, y = "Frequency") +
theme_minimal()
)
}
final_numeric <- final_numeric[, colSums(is.na(final_numeric)) < nrow(final_numeric)]
cor_matrix <- cor(final_numeric, use = "complete.obs")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(janitor)
library(psych)
# Specify the sheets and columns you want
columns_to_extract <- c("year","fips", "state", "county", "percent_food_insecure","percent_frequent_mental_distress",
"percent_uninsured_children", "percent_disconnected_youth", "spending_per_pupil","school_funding_adequacy", "high_school_graduation_rate", "median_household_income", "gender_pay_gap", "percent_enrolled_in_free_or_reduced_lunch", "percent_household_income_required_for_child_care_expenses", "percent_households_with_severe_cost_burden", "percent_rural", "percent_65_and_over", "percent_black","percent_not_proficient_in_english", "segregation_index", "percent_disconnected_youth", "food_environment_index", "teen_birth_rate", "percent_fair_or_poor_health", "percent_unemployed", "percent_children_in_single_parent_households", "percent_children_in_poverty", "percent_severe_housing_problems", "percent_completed_high_school","percent_completed_high_school", "percent_low_birthweight")
main_25 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_25.csv"
supp_25 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_25.csv"
main_24 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_24.csv"
supp_24 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_24.csv"
main_23 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_23.csv"
supp_23 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_23.csv"
main_22 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_22.csv"
supp_22 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_22.csv"
main_21 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_21.csv"
supp_21 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_21.csv"
main_20 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_20.csv"
supp_20 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_20.csv"
clean_and_select <- function(file_path, columns_to_extract) {
data <- read.csv(file_path, check.names = FALSE) %>%
janitor::clean_names() %>%
select(any_of(columns_to_extract))
return(data)
}
m_25 <- clean_and_select(main_25, columns_to_extract)
s_25 <- clean_and_select(supp_25, columns_to_extract)
m_24 <- clean_and_select(main_24, columns_to_extract)
s_24 <- clean_and_select(supp_24, columns_to_extract)
m_23 <- clean_and_select(main_23, columns_to_extract)
s_23 <- clean_and_select(supp_23, columns_to_extract)
m_22 <- clean_and_select(main_22, columns_to_extract)
s_22 <- clean_and_select(supp_22, columns_to_extract)
m_21 <- clean_and_select(main_21, columns_to_extract)
s_21 <- clean_and_select(supp_21, columns_to_extract)
m_20 <- clean_and_select(main_20, columns_to_extract)
s_20 <- clean_and_select(supp_20, columns_to_extract)
f_25 <- m_25 %>%
left_join(s_25, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_24 <- m_24 %>%
left_join(s_24, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_23 <- m_23 %>%
left_join(s_23, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_22 <- m_22 %>%
left_join(s_22, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_21 <- m_21 %>%
left_join(s_21, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_20 <- m_20 %>%
left_join(s_20, by = c("year", "fips")) %>%
select(-state.y, -county.y)
final <- bind_rows(f_25, f_24, f_23, f_22, f_21, f_20)
final_data_clean <- final %>%
select(where(~ !any(is.na(.))))
final <- final %>%
mutate(
rural_urban = case_when(
percent_rural == 100 ~ "Completely Rural",
percent_rural >= 50 & percent_rural < 100 ~ "Mostly Rural",
percent_rural < 50 ~ "Mostly Urban",
TRUE ~ NA_character_
)
)
total_rows <- nrow(final)
missing_counts <- colSums(is.na(final))
missing_percentage <- (missing_counts / total_rows) * 100
missing_table <- data.frame(
Column = names(missing_counts),
MissingCount = missing_counts,
MissingPercentage = round(missing_percentage, 2)
)
missing_table <- missing_table[missing_table$MissingCount > 0, ]
print(missing_table)
describe(final, fast = T)
ggplot(missing_table, aes(x = reorder(Column, -MissingPercentage), y = MissingPercentage)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(
title = "Percentage of Missing Data by Column",
x = "Variable",
y = "Missingness"
) +
theme_minimal()
library(ggplot2)
numeric_columns <- sapply(final, is.numeric)
final_numeric <- final[, numeric_columns]
for (col in names(final_numeric)) {
print(
ggplot(final, aes_string(x = col)) +
geom_histogram(fill = "steelblue", bins = 30, color = "black") +
labs(title = paste("Distribution of", col), x = col, y = "Frequency") +
theme_minimal()
)
}
final_numeric <- final_numeric[, colSums(is.na(final_numeric)) < nrow(final_numeric)]
cor_matrix <- cor(final_numeric, use = "complete.obs")
final_numeric <- final_numeric[, colSums(is.na(final_numeric)) < nrow(final_numeric)]
library(ggplot2)
library(reshape2)
cor_data <- melt(cor_matrix)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(janitor)
library(psych)
# Specify the sheets and columns you want
columns_to_extract <- c("year","fips", "state", "county", "percent_food_insecure","percent_frequent_mental_distress",
"percent_uninsured_children", "percent_disconnected_youth", "spending_per_pupil","school_funding_adequacy", "high_school_graduation_rate", "median_household_income", "gender_pay_gap", "percent_enrolled_in_free_or_reduced_lunch", "percent_household_income_required_for_child_care_expenses", "percent_households_with_severe_cost_burden", "percent_rural", "percent_65_and_over", "percent_black","percent_not_proficient_in_english", "segregation_index", "percent_disconnected_youth", "food_environment_index", "teen_birth_rate", "percent_fair_or_poor_health", "percent_unemployed", "percent_children_in_single_parent_households", "percent_children_in_poverty", "percent_severe_housing_problems", "percent_completed_high_school","percent_completed_high_school", "percent_low_birthweight")
main_25 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_25.csv"
supp_25 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_25.csv"
main_24 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_24.csv"
supp_24 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_24.csv"
main_23 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_23.csv"
supp_23 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_23.csv"
main_22 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_22.csv"
supp_22 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_22.csv"
main_21 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_21.csv"
supp_21 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_21.csv"
main_20 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_20.csv"
supp_20 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_20.csv"
clean_and_select <- function(file_path, columns_to_extract) {
data <- read.csv(file_path, check.names = FALSE) %>%
janitor::clean_names() %>%
select(any_of(columns_to_extract))
return(data)
}
m_25 <- clean_and_select(main_25, columns_to_extract)
s_25 <- clean_and_select(supp_25, columns_to_extract)
m_24 <- clean_and_select(main_24, columns_to_extract)
s_24 <- clean_and_select(supp_24, columns_to_extract)
m_23 <- clean_and_select(main_23, columns_to_extract)
s_23 <- clean_and_select(supp_23, columns_to_extract)
m_22 <- clean_and_select(main_22, columns_to_extract)
s_22 <- clean_and_select(supp_22, columns_to_extract)
m_21 <- clean_and_select(main_21, columns_to_extract)
s_21 <- clean_and_select(supp_21, columns_to_extract)
m_20 <- clean_and_select(main_20, columns_to_extract)
s_20 <- clean_and_select(supp_20, columns_to_extract)
f_25 <- m_25 %>%
left_join(s_25, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_24 <- m_24 %>%
left_join(s_24, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_23 <- m_23 %>%
left_join(s_23, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_22 <- m_22 %>%
left_join(s_22, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_21 <- m_21 %>%
left_join(s_21, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_20 <- m_20 %>%
left_join(s_20, by = c("year", "fips")) %>%
select(-state.y, -county.y)
final <- bind_rows(f_25, f_24, f_23, f_22, f_21, f_20)
final_data_clean <- final %>%
select(where(~ !any(is.na(.))))
final <- final %>%
mutate(
rural_urban = case_when(
percent_rural == 100 ~ "Completely Rural",
percent_rural >= 50 & percent_rural < 100 ~ "Mostly Rural",
percent_rural < 50 ~ "Mostly Urban",
TRUE ~ NA_character_
)
)
total_rows <- nrow(final)
missing_counts <- colSums(is.na(final))
missing_percentage <- (missing_counts / total_rows) * 100
missing_table <- data.frame(
Column = names(missing_counts),
MissingCount = missing_counts,
MissingPercentage = round(missing_percentage, 2)
)
missing_table <- missing_table[missing_table$MissingCount > 0, ]
print(missing_table)
describe(final, fast = T)
ggplot(missing_table, aes(x = reorder(Column, -MissingPercentage), y = MissingPercentage)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(
title = "Percentage of Missing Data by Column",
x = "Variable",
y = "Missingness"
) +
theme_minimal()
library(ggplot2)
numeric_columns <- sapply(final, is.numeric)
final_numeric <- final[, numeric_columns]
for (col in names(final_numeric)) {
print(
ggplot(final, aes_string(x = col)) +
geom_histogram(fill = "steelblue", bins = 30, color = "black") +
labs(title = paste("Distribution of", col), x = col, y = "Frequency") +
theme_minimal()
)
}
final_numeric <- final_numeric[, colSums(is.na(final_numeric)) < nrow(final_numeric)]
cor_matrix <- cor(final_numeric, use = "complete.obs")
final_numeric <- final_numeric[, colSums(is.na(final_numeric)) < nrow(final_numeric)]
cor_matrix <- cor(final_numeric, use = "complete.obs")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(janitor)
library(psych)
# Specify the sheets and columns you want
columns_to_extract <- c("year","fips", "state", "county", "percent_food_insecure","percent_frequent_mental_distress",
"percent_uninsured_children", "percent_disconnected_youth", "spending_per_pupil","school_funding_adequacy", "high_school_graduation_rate", "median_household_income", "gender_pay_gap", "percent_enrolled_in_free_or_reduced_lunch", "percent_household_income_required_for_child_care_expenses", "percent_households_with_severe_cost_burden", "percent_rural", "percent_65_and_over", "percent_black","percent_not_proficient_in_english", "segregation_index", "percent_disconnected_youth", "food_environment_index", "teen_birth_rate", "percent_fair_or_poor_health", "percent_unemployed", "percent_children_in_single_parent_households", "percent_children_in_poverty", "percent_severe_housing_problems", "percent_completed_high_school","percent_completed_high_school", "percent_low_birthweight")
main_25 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_25.csv"
supp_25 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_25.csv"
main_24 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_24.csv"
supp_24 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_24.csv"
main_23 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_23.csv"
supp_23 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_23.csv"
main_22 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_22.csv"
supp_22 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_22.csv"
main_21 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_21.csv"
supp_21 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_21.csv"
main_20 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/main_20.csv"
supp_20 <- "https://raw.githubusercontent.com/jonburns2454/DATA_698/refs/heads/main/DATA/supp_20.csv"
clean_and_select <- function(file_path, columns_to_extract) {
data <- read.csv(file_path, check.names = FALSE) %>%
janitor::clean_names() %>%
select(any_of(columns_to_extract))
return(data)
}
m_25 <- clean_and_select(main_25, columns_to_extract)
s_25 <- clean_and_select(supp_25, columns_to_extract)
m_24 <- clean_and_select(main_24, columns_to_extract)
s_24 <- clean_and_select(supp_24, columns_to_extract)
m_23 <- clean_and_select(main_23, columns_to_extract)
s_23 <- clean_and_select(supp_23, columns_to_extract)
m_22 <- clean_and_select(main_22, columns_to_extract)
s_22 <- clean_and_select(supp_22, columns_to_extract)
m_21 <- clean_and_select(main_21, columns_to_extract)
s_21 <- clean_and_select(supp_21, columns_to_extract)
m_20 <- clean_and_select(main_20, columns_to_extract)
s_20 <- clean_and_select(supp_20, columns_to_extract)
f_25 <- m_25 %>%
left_join(s_25, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_24 <- m_24 %>%
left_join(s_24, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_23 <- m_23 %>%
left_join(s_23, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_22 <- m_22 %>%
left_join(s_22, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_21 <- m_21 %>%
left_join(s_21, by = c("year", "fips")) %>%
select(-state.y, -county.y)
f_20 <- m_20 %>%
left_join(s_20, by = c("year", "fips")) %>%
select(-state.y, -county.y)
final <- bind_rows(f_25, f_24, f_23, f_22, f_21, f_20)
final_data_clean <- final %>%
select(where(~ !any(is.na(.))))
final <- final %>%
mutate(
rural_urban = case_when(
percent_rural == 100 ~ "Completely Rural",
percent_rural >= 50 & percent_rural < 100 ~ "Mostly Rural",
percent_rural < 50 ~ "Mostly Urban",
TRUE ~ NA_character_
)
)
total_rows <- nrow(final)
missing_counts <- colSums(is.na(final))
missing_percentage <- (missing_counts / total_rows) * 100
missing_table <- data.frame(
Column = names(missing_counts),
MissingCount = missing_counts,
MissingPercentage = round(missing_percentage, 2)
)
missing_table <- missing_table[missing_table$MissingCount > 0, ]
print(missing_table)
describe(final, fast = T)
ggplot(missing_table, aes(x = reorder(Column, -MissingPercentage), y = MissingPercentage)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(
title = "Percentage of Missing Data by Column",
x = "Variable",
y = "Missingness"
) +
theme_minimal()
library(ggplot2)
numeric_columns <- sapply(final, is.numeric)
final_numeric <- final[, numeric_columns]
for (col in names(final_numeric)) {
print(
ggplot(final, aes_string(x = col)) +
geom_histogram(fill = "steelblue", bins = 30, color = "black") +
labs(title = paste("Distribution of", col), x = col, y = "Frequency") +
theme_minimal()
)
}
library(dplyr)
yearly_summary <- final %>%
group_by(year) %>%
summarise(across(where(is.numeric), list(mean = mean, median = median, sd = sd), na.rm = TRUE))
print(yearly_summary)
region_summary <- final %>%
group_by(county.x, year) %>%
summarise(across(where(is.numeric), list(mean = mean, median = median, sd = sd), na.rm = TRUE))
print(region_summary)
library(ggplot2)
ggplot(region_summary, aes(x = year, y = percent_food_insecure_mean, color = county.x)) +
geom_line() +
labs(title = "Yearly Food Insecurity Across New York State Counties", x = "Year", y = "Food Insecurity") +
theme_minimal()
ggplot(region_summary, aes(x = year, y = percent_food_insecure_mean)) +
geom_line() +
labs(title = "Yearly Average Food Insecurity Across New York State", x = "Year", y = "Value") +
theme_minimal()
ggplot(final, aes(x = county.x, y = percent_food_insecure, color = rural_urban)) +
geom_boxplot(fill = "steelblue") +
labs(title = "County Level Comparison of Food Insecurity In New York State", x = "County", y = "Food Insecurity Percentage") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7))
final_csv <- write_csv(final, "C:\\Users\\jashb\\OneDrive\\Documents\\Masters Data Science\\Spring 2025\\DATA 698\\Masters Project\\final_data.csv")
